{"ast":null,"code":"var _jsxFileName = \"/Users/monikasaele/Github/react-app-1/src/context/StoreContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StoreContext = /*#__PURE__*/createContext(null);\nconst StoreContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState({}); // Initialize cart items as an empty object\n  const [products, setProducts] = useState([]); // Initialize products as an empty array\n\n  // Fetch product data when the component mounts\n  useEffect(() => {\n    async function fetchProducts() {\n      try {\n        const response = await fetch(\"https://api.noroff.dev/api/v1/online-shop/\");\n        const data = await response.json();\n        setProducts(data); // Populate products array with fetched da\n        setCartItems(data);\n      } catch (error) {\n        console.error(\"Error fetching product data:\", error);\n      }\n    }\n    fetchProducts();\n  }, []); // Empty dependency array to fetch data only once on mount\n\n  // ... rest of your context logic for addToCart, removeFromCart, updateCartItemCount, getTotalCartAmount\n\n  const contextValue = {\n    cartItems,\n    products,\n    // Include products in the context value\n    addToCart,\n    removeFromCart,\n    updateCartItemCount,\n    getTotalCartAmount\n  };\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(StoreContextProvider, \"7V3HuAxRMo56lQ51NwtzLMNFWZ4=\");\n_c = StoreContextProvider;\nexport default StoreContextProvider;\nvar _c;\n$RefreshReg$(_c, \"StoreContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","StoreContext","StoreContextProvider","props","_s","cartItems","setCartItems","products","setProducts","fetchProducts","response","fetch","data","json","error","console","contextValue","addToCart","removeFromCart","updateCartItemCount","getTotalCartAmount","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/monikasaele/Github/react-app-1/src/context/StoreContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const StoreContext = createContext(null);\n\nconst StoreContextProvider = (props) => {\n  const [cartItems, setCartItems] = useState({}); // Initialize cart items as an empty object\n  const [products, setProducts] = useState([]); // Initialize products as an empty array\n\n  // Fetch product data when the component mounts\n  useEffect(() => {\n    async function fetchProducts() {\n      try {\n        const response = await fetch(\"https://api.noroff.dev/api/v1/online-shop/\");\n        const data = await response.json();\n        setProducts(data); // Populate products array with fetched da\n        setCartItems(data)\n      } catch (error) {\n        console.error(\"Error fetching product data:\", error);\n      }\n    }\n\n    fetchProducts();\n  }, []); // Empty dependency array to fetch data only once on mount\n\n  // ... rest of your context logic for addToCart, removeFromCart, updateCartItemCount, getTotalCartAmount\n\n  const contextValue = {\n    cartItems,\n    products, // Include products in the context value\n    addToCart,\n    removeFromCart,\n    updateCartItemCount,\n    getTotalCartAmount,\n  };\n\n  return (\n    <StoreContext.Provider value={contextValue}>{props.children}</StoreContext.Provider>\n  );\n};\n\nexport default StoreContextProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAE/C,MAAMM,oBAAoB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACd,eAAeW,aAAaA,CAAA,EAAG;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;QAC1E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,WAAW,CAACI,IAAI,CAAC,CAAC,CAAC;QACnBN,YAAY,CAACM,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF;IAEAL,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;;EAEA,MAAMO,YAAY,GAAG;IACnBX,SAAS;IACTE,QAAQ;IAAE;IACVU,SAAS;IACTC,cAAc;IACdC,mBAAmB;IACnBC;EACF,CAAC;EAED,oBACEpB,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACC,KAAK,EAAEN,YAAa;IAAAO,QAAA,EAAEpB,KAAK,CAACoB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAwB,CAAC;AAExF,CAAC;AAACvB,EAAA,CAlCIF,oBAAoB;AAAA0B,EAAA,GAApB1B,oBAAoB;AAoC1B,eAAeA,oBAAoB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
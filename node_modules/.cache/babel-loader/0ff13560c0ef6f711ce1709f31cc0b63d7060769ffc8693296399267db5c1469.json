{"ast":null,"code":"var _jsxFileName = \"/Users/monikasaele/Github/react-app-1/src/components/SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { AsyncTypeahead, json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SEARCH_URI = 'https://api.noroff.dev/api/v1/online-shop/';\nconst Search = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [options, setOptions] = useState([]);\n  const handleSearch = query => {\n    setIsLoading(true);\n    fetch(`${SEARCH_URI}?q=${query}`).then(resp => resp.json()).then(({\n      items\n    }) => {\n      setOptions(items);\n      setIsLoading(false);\n    });\n  };\n\n  // Bypass client-side filtering by returning `true`. Results are already\n  // filtered by the search endpoint, so no need to do it again.\n  const filterBy = () => true;\n  return /*#__PURE__*/_jsxDEV(AsyncTypeahead, {\n    filterBy: filterBy,\n    id: \"async-example\",\n    isLoading: isLoading,\n    labelKey: \"login\",\n    minLength: 3,\n    onSearch: handleSearch,\n    options: options,\n    placeholder: \"Search for a Github user...\",\n    renderMenuItemChildren: option => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: option.login,\n        src: option.avatar_url,\n        style: {\n          height: '24px',\n          marginRight: '10px',\n          width: '24px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: option.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"ADxTizbguGrPNkIJkRw4Crgtoec=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","AsyncTypeahead","json","jsxDEV","_jsxDEV","Fragment","_Fragment","SEARCH_URI","Search","_s","isLoading","setIsLoading","options","setOptions","handleSearch","query","fetch","then","resp","items","filterBy","id","labelKey","minLength","onSearch","placeholder","renderMenuItemChildren","option","children","alt","login","src","avatar_url","style","height","marginRight","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/monikasaele/Github/react-app-1/src/components/SearchBar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { AsyncTypeahead, json } from \"react-router-dom\";\n\n\nconst SEARCH_URI = 'https://api.noroff.dev/api/v1/online-shop/';\n\n\nconst Search = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const handleSearch = (query) => {\n    setIsLoading(true);\n\n    fetch(`${SEARCH_URI}?q=${query}`)\n      .then((resp) => resp.json())\n      .then(({ items }) => {\n        setOptions(items);\n        setIsLoading(false);\n      });\n  };\n\n\n  // Bypass client-side filtering by returning `true`. Results are already\n  // filtered by the search endpoint, so no need to do it again.\n  const filterBy = () => true;\n\n  return (\n    <AsyncTypeahead\n      filterBy={filterBy}\n      id=\"async-example\"\n      isLoading={isLoading}\n      labelKey=\"login\"\n      minLength={3}\n      onSearch={handleSearch}\n      options={options}\n      placeholder=\"Search for a Github user...\"\n      renderMenuItemChildren={(option) => (\n        <>\n          <img\n            alt={option.login}\n            src={option.avatar_url}\n            style={{\n              height: '24px',\n              marginRight: '10px',\n              width: '24px',\n            }}\n          />\n          <span>{option.login}</span>\n        </>\n      )}\n    />\n  );\n};\n\nexport default Search;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGxD,MAAMC,UAAU,GAAG,4CAA4C;AAG/D,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMc,YAAY,GAAIC,KAAK,IAAK;IAC9BJ,YAAY,CAAC,IAAI,CAAC;IAElBK,KAAK,CAAE,GAAET,UAAW,MAAKQ,KAAM,EAAC,CAAC,CAC9BE,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAAChB,IAAI,CAAC,CAAC,CAAC,CAC3Be,IAAI,CAAC,CAAC;MAAEE;IAAM,CAAC,KAAK;MACnBN,UAAU,CAACM,KAAK,CAAC;MACjBR,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;;EAGD;EACA;EACA,MAAMS,QAAQ,GAAGA,CAAA,KAAM,IAAI;EAE3B,oBACEhB,OAAA,CAACH,cAAc;IACbmB,QAAQ,EAAEA,QAAS;IACnBC,EAAE,EAAC,eAAe;IAClBX,SAAS,EAAEA,SAAU;IACrBY,QAAQ,EAAC,OAAO;IAChBC,SAAS,EAAE,CAAE;IACbC,QAAQ,EAAEV,YAAa;IACvBF,OAAO,EAAEA,OAAQ;IACjBa,WAAW,EAAC,6BAA6B;IACzCC,sBAAsB,EAAGC,MAAM,iBAC7BvB,OAAA,CAAAE,SAAA;MAAAsB,QAAA,gBACExB,OAAA;QACEyB,GAAG,EAAEF,MAAM,CAACG,KAAM;QAClBC,GAAG,EAAEJ,MAAM,CAACK,UAAW;QACvBC,KAAK,EAAE;UACLC,MAAM,EAAE,MAAM;UACdC,WAAW,EAAE,MAAM;UACnBC,KAAK,EAAE;QACT;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFpC,OAAA;QAAAwB,QAAA,EAAOD,MAAM,CAACG;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,eAC3B;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAAC/B,EAAA,CA9CID,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AAgDZ,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
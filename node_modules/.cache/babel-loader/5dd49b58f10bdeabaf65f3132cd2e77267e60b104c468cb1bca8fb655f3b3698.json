{"ast":null,"code":"var _jsxFileName = \"/Users/monikasaele/Github/react-app-1/src/context/StoreContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { Products } from \"../data/FetchProducts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StoreContext = /*#__PURE__*/createContext();\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let i = 1; i < Products.length; i++) {\n    cart[i] = 0;\n  }\n  return cart;\n};\nexport const StoreContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const [products, setProducts] = useState([]);\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = Products.find(product => product.id === Number(item));\n        totalAmount += cartItems[item] * itemInfo.price;\n      }\n    }\n    return totalAmount;\n  };\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n  };\n  const updateCartItemCount = (newAmount, itemId) => {\n    newAmount = Number(newAmount);\n    if (isNaN(newAmount)) {\n      return;\n    }\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: newAmount\n    }));\n  };\n  const contextValue = {\n    cartItems,\n    products,\n    addToCart,\n    removeFromCart,\n    updateCartItemCount,\n    getTotalCartAmount\n  };\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n_s(StoreContextProvider, \"djdTCFrwmwl0Rn3SbOQguRST55A=\");\n_c = StoreContextProvider;\nexport default StoreContextProvider;\nvar _c;\n$RefreshReg$(_c, \"StoreContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","Products","jsxDEV","_jsxDEV","StoreContext","getDefaultCart","cart","i","length","StoreContextProvider","props","_s","cartItems","setCartItems","products","setProducts","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","price","addToCart","itemId","prev","removeFromCart","updateCartItemCount","newAmount","isNaN","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/monikasaele/Github/react-app-1/src/context/StoreContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { Products } from \"../data/FetchProducts\";\n\n\nexport const StoreContext = createContext();\n\nconst getDefaultCart = () => {\n    let cart = {}\n    for (let i =1; i < Products.length; i++) {\n        cart[i] = 0;\n    }\n    return cart;\n\n}\nexport const StoreContextProvider = (props) => {\n    const [cartItems, setCartItems] = useState(getDefaultCart());\n    const [products, setProducts] = useState([]);\n\n\n\n    const getTotalCartAmount = () => {\n        let totalAmount = 0;\n        for (const item in cartItems) {\n            if( cartItems[item] > 0) {\n                let itemInfo = Products.find((product) => product.id === Number(item));\n                totalAmount += cartItems[item] * itemInfo.price\n            }\n        }\n        return totalAmount;\n    }  \n\n    const addToCart = (itemId) => {\n        setCartItems((prev) => ({...prev, [itemId]: prev[itemId] + 1}))\n    }\n\n    const removeFromCart = (itemId) => {\n        setCartItems((prev) => ({...prev, [itemId]: prev[itemId] - 1}))\n }\n\n    const updateCartItemCount = (newAmount, itemId) => {\n        newAmount = Number(newAmount);\n  \n        if (isNaN(newAmount)) {\n    \n          return;\n        }\n      \n        setCartItems((prev) => ({ ...prev, [itemId]: newAmount }));\n      };\n   \n\n const contextValue = {cartItems,  products, addToCart, removeFromCart, updateCartItemCount, getTotalCartAmount };\n\n\n    return <StoreContext.Provider value={contextValue}> \n     {props.children}\n    </StoreContext.Provider>\n}\n\nexport default StoreContextProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,QAAQ,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,OAAO,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAE3C,MAAMO,cAAc,GAAGA,CAAA,KAAM;EACzB,IAAIC,IAAI,GAAG,CAAC,CAAC;EACb,KAAK,IAAIC,CAAC,GAAE,CAAC,EAAEA,CAAC,GAAGN,QAAQ,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;IACrCD,IAAI,CAACC,CAAC,CAAC,GAAG,CAAC;EACf;EACA,OAAOD,IAAI;AAEf,CAAC;AACD,OAAO,MAAMG,oBAAoB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAACM,cAAc,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAI5C,MAAMiB,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,WAAW,GAAG,CAAC;IACnB,KAAK,MAAMC,IAAI,IAAIN,SAAS,EAAE;MAC1B,IAAIA,SAAS,CAACM,IAAI,CAAC,GAAG,CAAC,EAAE;QACrB,IAAIC,QAAQ,GAAGlB,QAAQ,CAACmB,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKC,MAAM,CAACL,IAAI,CAAC,CAAC;QACtED,WAAW,IAAIL,SAAS,CAACM,IAAI,CAAC,GAAGC,QAAQ,CAACK,KAAK;MACnD;IACJ;IACA,OAAOP,WAAW;EACtB,CAAC;EAED,MAAMQ,SAAS,GAAIC,MAAM,IAAK;IAC1Bb,YAAY,CAAEc,IAAI,KAAM;MAAC,GAAGA,IAAI;MAAE,CAACD,MAAM,GAAGC,IAAI,CAACD,MAAM,CAAC,GAAG;IAAC,CAAC,CAAC,CAAC;EACnE,CAAC;EAED,MAAME,cAAc,GAAIF,MAAM,IAAK;IAC/Bb,YAAY,CAAEc,IAAI,KAAM;MAAC,GAAGA,IAAI;MAAE,CAACD,MAAM,GAAGC,IAAI,CAACD,MAAM,CAAC,GAAG;IAAC,CAAC,CAAC,CAAC;EACtE,CAAC;EAEE,MAAMG,mBAAmB,GAAGA,CAACC,SAAS,EAAEJ,MAAM,KAAK;IAC/CI,SAAS,GAAGP,MAAM,CAACO,SAAS,CAAC;IAE7B,IAAIC,KAAK,CAACD,SAAS,CAAC,EAAE;MAEpB;IACF;IAEAjB,YAAY,CAAEc,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACD,MAAM,GAAGI;IAAU,CAAC,CAAC,CAAC;EAC5D,CAAC;EAGN,MAAME,YAAY,GAAG;IAACpB,SAAS;IAAGE,QAAQ;IAAEW,SAAS;IAAEG,cAAc;IAAEC,mBAAmB;IAAEb;EAAmB,CAAC;EAG7G,oBAAOb,OAAA,CAACC,YAAY,CAAC6B,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EAChDzB,KAAK,CAACyB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAC5B,CAAC;AAAA5B,EAAA,CA3CYF,oBAAoB;AAAA+B,EAAA,GAApB/B,oBAAoB;AA6CjC,eAAeA,oBAAoB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
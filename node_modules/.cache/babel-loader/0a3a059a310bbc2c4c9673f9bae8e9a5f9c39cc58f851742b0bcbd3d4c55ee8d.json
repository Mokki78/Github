{"ast":null,"code":"var _jsxFileName = \"/Users/monikasaele/Github/react-app-1/src/pages/Cart.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Container } from \"react-bootstrap\";\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst products = [{\n  id: 0,\n  title: 'Milk',\n  price: 19.99,\n  discountedPrice: 19.99\n}, {\n  id: 1,\n  title: 'Bread',\n  price: 12.99,\n  discountedPrice: 12.99\n}, {\n  id: 2,\n  title: 'Cheese',\n  price: 25.99,\n  discountedPrice: 25.99\n}];\nexport const initialState = {\n  cart: [],\n  total: 0\n};\nexport function Cart(state, action) {\n  let productIndex;\n  let newTotal;\n  let cart;\n  switch (action.type) {\n    // Adding a product\n    case 'addProduct':\n      // Create a new cart so we don't mutate our state\n      cart = [...state.cart];\n      // Get the product index\n      productIndex = cart.findIndex(product => product.id === action.payload.id);\n      if (productIndex === -1) {\n        // If productIndex is -1, it doesn't exist so we add it\n        cart.push({\n          ...action.payload,\n          quantity: 1\n        });\n      } else {\n        // The product does exist so we increase the quantity\n        // We do not want to mutate quantity so we are creating a new array with\n        // quantity incremented.\n        cart = [...cart.slice(0, productIndex), {\n          ...cart[productIndex],\n          quantity: cart[productIndex].quantity + 1\n        }, ...cart.slice(productIndex + 1)];\n      }\n      // Set the new total so we don't have to keep calculating it\n      newTotal = cart.reduce((currentTotal, product) => {\n        currentTotal += product.discountedPrice * product.quantity;\n        return currentTotal;\n      }, 0);\n      return {\n        ...state,\n        cart: cart,\n        total: newTotal\n      };\n\n    // Removing a product\n    case 'removeProduct':\n      cart = [...state.cart];\n      // Get the product index\n      productIndex = cart.findIndex(product => product.id === action.payload.id);\n      // If the product index is not -1 then it exists\n      if (productIndex !== -1) {\n        if (cart[productIndex].quantity > 1) {\n          // Remove 1 from quantity is quantity is higher than 1\n          // We do not want to mutate cart so we recreate it\n          cart = [...cart.slice(0, productIndex), {\n            ...cart[productIndex],\n            quantity: cart[productIndex].quantity - 1\n          }, ...cart.slice(productIndex + 1)];\n        } else {\n          // Remove the item entirely if quantity is going to be 0\n          cart = [...cart.slice(0, productIndex), ...cart.slice(productIndex + 1)];\n        }\n      }\n      // Set the new total so we don't have to keep calculating it\n      newTotal = cart.reduce((currentTotal, product) => {\n        currentTotal += product.discountedPrice * product.quantity;\n        return currentTotal;\n      }, 0);\n      return {\n        ...state,\n        cart: cart,\n        total: newTotal\n      };\n\n    // Clearing a cart\n    case 'clearCart':\n      return {\n        cart: [],\n        total: 0\n      };\n    default:\n      return state;\n  }\n}\n_c = Cart;\nexport function CartItems() {\n  _s();\n  const [state, dispatch] = useReducer(Cart, initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => dispatch({\n          type: 'addProduct',\n          payload: product\n        }),\n        children: [\"Add \", product.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => dispatch({\n          type: 'removeProduct',\n          payload: product\n        }),\n        children: [\"Remove \", product.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, product.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => dispatch({\n          type: 'clearCart'\n        }),\n        children: \"Clear cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => dispatch({\n          type: 'getTotal'\n        }),\n        children: \"Get total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: state.total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: state.cart.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [product.quantity, \" - \", product.title, \" - \", product.discountedPrice]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(CartItems, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c2 = CartItems;\nexport default CartItems;\nvar _c, _c2;\n$RefreshReg$(_c, \"Cart\");\n$RefreshReg$(_c2, \"CartItems\");","map":{"version":3,"names":["Button","Container","React","useReducer","jsxDEV","_jsxDEV","products","id","title","price","discountedPrice","initialState","cart","total","Cart","state","action","productIndex","newTotal","type","findIndex","product","payload","push","quantity","slice","reduce","currentTotal","_c","CartItems","_s","dispatch","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/monikasaele/Github/react-app-1/src/pages/Cart.jsx"],"sourcesContent":[" import { Button, Container } from \"react-bootstrap\";\n\n\nimport React, { useReducer } from 'react';\n\nconst products = [\n  {\n    id: 0,\n    title: 'Milk',\n    price: 19.99,\n    discountedPrice: 19.99,\n  },\n  {\n    id: 1,\n    title: 'Bread',\n    price: 12.99,\n    discountedPrice: 12.99,\n  },\n  {\n    id: 2,\n    title: 'Cheese',\n    price: 25.99,\n    discountedPrice: 25.99,\n  },\n];\n\nexport const initialState = { cart: [], total: 0 };\n\nexport function Cart(state, action) {\n  let productIndex;\n  let newTotal;\n  let cart;\n\n  switch (action.type) {\n    // Adding a product\n    case 'addProduct':\n      // Create a new cart so we don't mutate our state\n      cart = [...state.cart];\n      // Get the product index\n      productIndex = cart.findIndex(\n        (product) => product.id === action.payload.id,\n      );\n      if (productIndex === -1) {\n        // If productIndex is -1, it doesn't exist so we add it\n        cart.push({ ...action.payload, quantity: 1 });\n      } else {\n        // The product does exist so we increase the quantity\n        // We do not want to mutate quantity so we are creating a new array with\n        // quantity incremented.\n        cart = [\n          ...cart.slice(0, productIndex),\n          { ...cart[productIndex], quantity: cart[productIndex].quantity + 1 },\n          ...cart.slice(productIndex + 1),\n        ];\n      }\n      // Set the new total so we don't have to keep calculating it\n      newTotal = cart.reduce((currentTotal, product) => {\n        currentTotal += product.discountedPrice * product.quantity;\n        return currentTotal;\n      }, 0);\n      return { ...state, cart: cart, total: newTotal };\n\n    // Removing a product\n    case 'removeProduct':\n      cart = [...state.cart];\n      // Get the product index\n      productIndex = cart.findIndex(\n        (product) => product.id === action.payload.id,\n      );\n      // If the product index is not -1 then it exists\n      if (productIndex !== -1) {\n        if (cart[productIndex].quantity > 1) {\n          // Remove 1 from quantity is quantity is higher than 1\n          // We do not want to mutate cart so we recreate it\n          cart = [\n            ...cart.slice(0, productIndex),\n            {\n              ...cart[productIndex],\n              quantity: cart[productIndex].quantity - 1,\n            },\n            ...cart.slice(productIndex + 1),\n          ];\n        } else {\n          // Remove the item entirely if quantity is going to be 0\n          cart = [\n            ...cart.slice(0, productIndex),\n            ...cart.slice(productIndex + 1),\n          ];\n        }\n      }\n      // Set the new total so we don't have to keep calculating it\n      newTotal = cart.reduce((currentTotal, product) => {\n        currentTotal += product.discountedPrice * product.quantity;\n        return currentTotal;\n      }, 0);\n      return { ...state, cart: cart, total: newTotal };\n\n    // Clearing a cart\n    case 'clearCart':\n      return { cart: [], total: 0 };\n\n    default:\n      return state;\n  }\n}\n\nexport function CartItems() {\n  const [state, dispatch] = useReducer(Cart, initialState);\n  return (\n    <div>\n      {products.map((product) => (\n        <div key={product.id}>\n          <Button\n            onClick={() => dispatch({ type: 'addProduct', payload: product })}\n          >\n            Add {product.title}\n          </Button>\n          <Button\n            onClick={() =>\n              dispatch({ type: 'removeProduct', payload: product })\n            }\n          >\n            Remove {product.title}\n          </Button>\n        </div>\n      ))}\n      <div>\n        <hr />\n        <Button onClick={() => dispatch({ type: 'clearCart' })}>\n          Clear cart\n        </Button>\n        <Button onClick={() => dispatch({ type: 'getTotal' })}>\n          Get total\n        </Button>\n      </div>\n      <div>{state.total}</div>\n      <hr />\n      <div>\n        {state.cart.map((product) => (\n          <div key={product.id}>\n            {product.quantity} - {product.title} - {product.discountedPrice}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CartItems;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
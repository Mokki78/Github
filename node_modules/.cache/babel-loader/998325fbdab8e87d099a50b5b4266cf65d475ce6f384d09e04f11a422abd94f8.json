{"ast":null,"code":"var _jsxFileName = \"/Users/monikasaele/Github/react-app-1/src/pages/Cart.jsx\",\n  _s = $RefreshSig$();\nimport { Button } from \"react-bootstrap\";\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function fetchData(products) {\n  const response = await fetch(\"https://api.noroff.dev/api/v1/online-shop\");\n  const json = await response.json();\n  console.log(json);\n}\nfetchData();\nexport const initialState = {\n  cart: [],\n  total: 0\n};\nexport function CartItems(state, action) {\n  let productIndex;\n  let newTotal;\n  let cart;\n  switch (action.type) {\n    // Adding a product\n    case 'addProduct':\n      // Create a new cart so we don't mutate our state\n      cart = [...state.cart];\n      // Get the product index\n      productIndex = cart.findIndex(product => product.id === action.payload.id);\n      if (productIndex === -1) {\n        // If productIndex is -1, it doesn't exist so we add it\n        cart.push({\n          ...action.payload,\n          quantity: 1\n        });\n      } else {\n        // The product does exist so we increase the quantity\n        // We do not want to mutate quantity so we are creating a new array with\n        // quantity incremented.\n        cart = [...cart.slice(0, productIndex), {\n          ...cart[productIndex],\n          quantity: cart[productIndex].quantity + 1\n        }, ...cart.slice(productIndex + 1)];\n      }\n      // Set the new total so we don't have to keep calculating it\n      newTotal = cart.reduce((currentTotal, product) => {\n        currentTotal += product.discountedPrice * product.quantity;\n        return currentTotal;\n      }, 0);\n      return {\n        ...state,\n        cart: cart,\n        total: newTotal\n      };\n\n    // Removing a product\n    case 'removeProduct':\n      cart = [...state.cart];\n      // Get the product index\n      productIndex = cart.findIndex(product => product.id === action.payload.id);\n      // If the product index is not -1 then it exists\n      if (productIndex !== -1) {\n        if (cart[productIndex].quantity > 1) {\n          // Remove 1 from quantity is quantity is higher than 1\n          // We do not want to mutate cart so we recreate it\n          cart = [...cart.slice(0, productIndex), {\n            ...cart[productIndex],\n            quantity: cart[productIndex].quantity - 1\n          }, ...cart.slice(productIndex + 1)];\n        } else {\n          // Remove the item entirely if quantity is going to be 0\n          cart = [...cart.slice(0, productIndex), ...cart.slice(productIndex + 1)];\n        }\n      }\n      // Set the new total so we don't have to keep calculating it\n      newTotal = cart.reduce((currentTotal, product) => {\n        currentTotal += product.discountedPrice * product.quantity;\n        return currentTotal;\n      }, 0);\n      return {\n        ...state,\n        cart: cart,\n        total: newTotal\n      };\n\n    // Clearing a cart\n    case 'clearCart':\n      return {\n        cart: [],\n        total: 0\n      };\n    default:\n      return state;\n  }\n}\n_c = CartItems;\nexport function Cart() {\n  _s();\n  const [state, dispatch] = useReducer(CartItems, initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => dispatch({\n          type: 'addProduct',\n          payload: product\n        }),\n        children: [\"Add \", product.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => dispatch({\n          type: 'removeProduct',\n          payload: product\n        }),\n        children: [\"Remove \", product.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, product.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => dispatch({\n          type: 'clearCart'\n        }),\n        children: \"Clear cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => dispatch({\n          type: 'getTotal'\n        }),\n        children: \"Get total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: state.total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: state.cart.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [product.quantity, \" - \", product.title, \" - \", product.discountedPrice]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(Cart, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c2 = Cart;\nexport default Cart;\nvar _c, _c2;\n$RefreshReg$(_c, \"CartItems\");\n$RefreshReg$(_c2, \"Cart\");","map":{"version":3,"names":["Button","React","useReducer","jsxDEV","_jsxDEV","fetchData","products","response","fetch","json","console","log","initialState","cart","total","CartItems","state","action","productIndex","newTotal","type","findIndex","product","id","payload","push","quantity","slice","reduce","currentTotal","discountedPrice","_c","Cart","_s","dispatch","children","map","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/monikasaele/Github/react-app-1/src/pages/Cart.jsx"],"sourcesContent":[" import { Button } from \"react-bootstrap\";\nimport React, { useReducer} from 'react';\n\n\nasync function fetchData(products) {\n    const response = await fetch(\"https://api.noroff.dev/api/v1/online-shop\");\n    const json = await response.json();\n    console.log(json);\n}\n\nfetchData();\n\n\n\nexport const initialState = { cart: [], total: 0 };\n\nexport function CartItems(state, action) {\n  let productIndex;\n  let newTotal;\n  let cart;\n\n  switch (action.type) {\n    // Adding a product\n    case 'addProduct':\n      // Create a new cart so we don't mutate our state\n      cart = [...state.cart];\n      // Get the product index\n      productIndex = cart.findIndex(\n        (product) => product.id === action.payload.id,\n      );\n      if (productIndex === -1) {\n        // If productIndex is -1, it doesn't exist so we add it\n        cart.push({ ...action.payload, quantity: 1 });\n      } else {\n        // The product does exist so we increase the quantity\n        // We do not want to mutate quantity so we are creating a new array with\n        // quantity incremented.\n        cart = [\n          ...cart.slice(0, productIndex),\n          { ...cart[productIndex], quantity: cart[productIndex].quantity + 1 },\n          ...cart.slice(productIndex + 1),\n        ];\n      }\n      // Set the new total so we don't have to keep calculating it\n      newTotal = cart.reduce((currentTotal, product) => {\n        currentTotal += product.discountedPrice * product.quantity;\n        return currentTotal;\n      }, 0);\n      return { ...state, cart: cart, total: newTotal };\n\n    // Removing a product\n    case 'removeProduct':\n      cart = [...state.cart];\n      // Get the product index\n      productIndex = cart.findIndex(\n        (product) => product.id === action.payload.id,\n      );\n      // If the product index is not -1 then it exists\n      if (productIndex !== -1) {\n        if (cart[productIndex].quantity > 1) {\n          // Remove 1 from quantity is quantity is higher than 1\n          // We do not want to mutate cart so we recreate it\n          cart = [\n            ...cart.slice(0, productIndex),\n            {\n              ...cart[productIndex],\n              quantity: cart[productIndex].quantity - 1,\n            },\n            ...cart.slice(productIndex + 1),\n          ];\n        } else {\n          // Remove the item entirely if quantity is going to be 0\n          cart = [\n            ...cart.slice(0, productIndex),\n            ...cart.slice(productIndex + 1),\n          ];\n        }\n      }\n      // Set the new total so we don't have to keep calculating it\n      newTotal = cart.reduce((currentTotal, product) => {\n        currentTotal += product.discountedPrice * product.quantity;\n        return currentTotal;\n      }, 0);\n      return { ...state, cart: cart, total: newTotal };\n\n    // Clearing a cart\n    case 'clearCart':\n      return { cart: [], total: 0 };\n\n    default:\n      return state;\n  }\n}\n\nexport function Cart() {\n  const [state, dispatch] = useReducer(CartItems, initialState);\n  return (\n    <div>\n      {products.map((product) => (\n        <div key={product.id}>\n          <Button\n            onClick={() => dispatch({ type: 'addProduct', payload: product })}\n          >\n            Add {product.title}\n          </Button>\n          <Button\n            onClick={() =>\n              dispatch({ type: 'removeProduct', payload: product })\n            }\n          >\n            Remove {product.title}\n          </Button>\n        </div>\n      ))}\n      <div>\n        <hr />\n        <Button onClick={() => dispatch({ type: 'clearCart' })}>\n          Clear cart\n        </Button>\n        <Button onClick={() => dispatch({ type: 'getTotal' })}>\n          Get total\n        </Button>\n      </div>\n      <div>{state.total}</div>\n      <hr />\n      <div>\n        {state.cart.map((product) => (\n          <div key={product.id}>\n            {product.quantity} - {product.title} - {product.discountedPrice}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Cart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}